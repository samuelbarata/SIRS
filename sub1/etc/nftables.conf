#!/usr/sbin/nft -f

# Networks
define corporate_network = 95.92.192.0/21
define service_network = 95.92.204.0/25
define data_historian_network = 95.92.204.128/25
define scada_network = 95.92.200.0/22
define substation_networks = { 95.92.205.0/24, 95.92.206.0/24 }
define network = { 95.92.192.0/20 }
# Hosts
define dns = 95.92.204.53
define web = 95.92.204.80
define db = 95.92.204.130
define db_ports = 3306
define vpn = 95.92.200.2
# Groups
define service_hosts = { 95.92.204.53, 95.92.204.80 }
define dhcp_gateways = { 0.0.0.0, 95.92.192.1 }


# Interfaces
define internet_interfaces = { eth0 }
define vpn_interfaces = { tun0 }


flush ruleset

table inet filter {
	chain input {
		type filter hook input priority 0; policy drop;
		iif lo counter accept comment "Accept any localhost traffic"
		udp sport 1194 ip saddr $vpn counter accept comment "Accept from VPN on port 1194"
		ip protocol icmp icmp type {echo-request, echo-reply} ip saddr $network counter accept comment "Accepts pings"

	}
	
	chain forward {
		type filter hook forward priority 0; policy drop;

		ip saddr $substation_networks ip daddr $scada_network counter accept comment "Accepts from LAN to Scada Central"
		ip saddr $scada_network ip daddr $substation_networks counter accept comment "Accepts from Scada Central to LAN"

		ip protocol icmp icmp type {echo-request, echo-reply} ip saddr $network counter accept comment "Accepts pings"

	}
	chain output {
		udp dport 1194 ip daddr $vpn counter accept comment "Accept to VPN on port 1194"
		ip protocol icmp icmp type {echo-request, echo-reply} ip saddr $network counter accept comment "Accepts pings"
		type filter hook output priority 0; policy drop;
	}
}
