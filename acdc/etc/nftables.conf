#!/usr/sbin/nft -f

# Networks
define corporate_network = 95.92.192.0/21
define service_network = 95.92.204.0/25
define data_historian_network = 95.92.204.128/25
define scada_network = 95.92.200.0/22
define substation_networks = { 95.92.201.0/24, 95.92.202.0/24 }
define network = { 95.92.192.0/20 }
# Hosts
define dns = 95.92.204.53
define web = 95.92.204.80
define db = 95.92.204.130
#TODO: change db port
define db_ports = {1024-65535}
define vpn = 95.92.200.2
# Groups
define service_hosts = { 95.92.204.53, 95.92.204.80 }
define dhcp_gateways = { 0.0.0.0, 95.92.192.1 }


# Interfaces
define internet_interfaces = { eth0 }
define access_interfaces = { eth1, eth2, eth3, eth4 }
define corporate_interface = { eth2 }
define dhcp_interfaces = { eth2 }

flush ruleset

table inet filter {
	chain input {
		type filter hook input priority 0; policy drop;
		iif $dhcp_interfaces udp sport 68 ip daddr $dhcp_gateways counter accept comment "Accept DHCP traffic"
	}
	chain forward {
		type filter hook forward priority 0; policy drop;
		ct state established,related counter accept comment "Allow established connections"
		tcp dport ssh ip daddr $service_network counter accept comment "Accept SSH to Service Network"
		tcp sport ssh ip saddr $service_network counter accept comment "Accept SSH from Service Network"
		tcp dport { http, https } ip daddr $web counter accept comment "Accept HTTP to Web Server"
		tcp sport { http, https } ip saddr $web counter accept comment "Accept HTTP from Web Server"
		udp dport domain ip daddr $dns counter accept comment "Accept DNS to DNS Server"
		udp sport domain ip saddr $dns counter accept comment "Accept DNS from DNS Server"
		tcp dport 1194 ip daddr $vpn counter accept comment "Accept VPN on port 1194"
		tcp sport 1194 ip saddr $vpn counter accept comment "Accept VPN on port 1194"

		udp dport domain ip saddr $dns counter accept comment "Allow connections to external DNS resolution"

		tcp dport $db_ports ip saddr $scada_network ip daddr $data_historian_network counter accept comment "Allow db access from scada"
		tcp sport $db_ports ip saddr $data_historian_network ip daddr $scada_network counter accept comment "Allow scada access from db"

		ip saddr $corporate_network counter jump fwd_from_corporate
        ip daddr $corporate_network counter jump fwd_to_corporate
	}
	chain output {
		type filter hook output priority 0; policy accept;
	}

	chain fwd_from_corporate{
		ip protocol icmp counter accept comment "Allow corporate to ping"
		ip saddr $corporate_network ip daddr $scada_network counter accept comment "Allow corporate to sdaca"
		ip saddr $corporate_network ip daddr !=$network counter accept comment "Allow corporate to internet"

	}
	chain fwd_to_corporate{
		ip protocol icmp counter accept comment "Allow corporate to ping"
		udp sport domain counter accept comment "Allow DNS replies"
	}
}
